@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #0f172a;
  --foreground: #e2e8f0;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0f172a;
    --foreground: #e2e8f0;
  }
}

body {
  background: linear-gradient(135deg, #0f172a 0%, #581c87 50%, #1e1b4b 100%);
  color: var(--foreground);
  font-family: system-ui, -apple-system, sans-serif;
  min-height: 100vh;
}

/* 自定义字体类 */
.font-mystical {
  font-family: 'Cinzel', serif;
}

.font-futuristic {
  font-family: 'Orbitron', monospace;
}

/* 金色主题颜色 */
.text-gold-300 {
  color: #fcd34d;
}

.text-gold-400 {
  color: #fbbf24;
}

.text-gold-500 {
  color: #f59e0b;
}

.bg-gold-500 {
  background-color: #f59e0b;
}

.bg-gold-600 {
  background-color: #d97706;
}

.border-gold-400 {
  border-color: #fbbf24;
}

.border-gold-500 {
  border-color: #f59e0b;
}

.shadow-gold-500\/50 {
  box-shadow: 0 25px 50px -12px rgba(245, 158, 11, 0.5);
}

.from-gold-500 {
  --tw-gradient-from: #f59e0b;
  --tw-gradient-to: rgb(245 158 11 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-gold-600 {
  --tw-gradient-to: #d97706;
}

.hover\:from-gold-600:hover {
  --tw-gradient-from: #d97706;
  --tw-gradient-to: rgb(217 119 6 / 0);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.hover\:to-gold-700:hover {
  --tw-gradient-to: #b45309;
}

/* 3D 变换效果 */
.rotate-y-0 {
  transform: rotateY(0deg);
}

.rotate-y-180 {
  transform: rotateY(180deg);
}

/* 卡牌切换动画 */
@keyframes cardFlip {
  0% { transform: rotateY(0deg) scale(1); }
  50% { transform: rotateY(90deg) scale(1.05); }
  100% { transform: rotateY(0deg) scale(1); }
}

@keyframes cardShuffle {
  0% { transform: translateX(-10px) rotate(-2deg); }
  50% { transform: translateX(10px) rotate(2deg); }
  100% { transform: translateX(-10px) rotate(-2deg); }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes cardExplode {
  0% { transform: scale(1) rotate(0deg); }
  50% { transform: scale(1.2) rotate(180deg); }
  100% { transform: scale(1) rotate(360deg); }
}

@keyframes cardGlow {
  0% { box-shadow: 0 0 20px rgba(34, 211, 238, 0.5); }
  50% { box-shadow: 0 0 40px rgba(168, 85, 247, 0.8), 0 0 60px rgba(34, 211, 238, 0.6); }
  100% { box-shadow: 0 0 20px rgba(34, 211, 238, 0.5); }
}

@keyframes particleBurst {
  0% { 
    transform: scale(0) rotate(0deg);
    opacity: 1;
  }
  50% { 
    transform: scale(1.5) rotate(180deg);
    opacity: 0.8;
  }
  100% { 
    transform: scale(3) rotate(360deg);
    opacity: 0;
  }
}

@keyframes energyWave {
  0% { 
    transform: scale(0) rotate(0deg);
    opacity: 1;
  }
  100% { 
    transform: scale(4) rotate(360deg);
    opacity: 0;
  }
}

@keyframes cardFloat {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  25% { transform: translateY(-10px) rotate(1deg); }
  50% { transform: translateY(-5px) rotate(-1deg); }
  75% { transform: translateY(-15px) rotate(0.5deg); }
}

@keyframes magicRings {
  0% { 
    transform: scale(0) rotate(0deg);
    opacity: 1;
  }
  100% { 
    transform: scale(2) rotate(180deg);
    opacity: 0;
  }
}

.animate-card-flip {
  animation: cardFlip 0.3s ease-in-out;
}

.animate-card-shuffle {
  animation: cardShuffle 0.15s ease-in-out infinite;
}

.animate-shimmer {
  animation: shimmer 1s ease-in-out infinite;
}

.animate-card-explode {
  animation: cardExplode 0.6s ease-in-out;
}

.animate-card-glow {
  animation: cardGlow 2s ease-in-out infinite;
}

.animate-card-float {
  animation: cardFloat 3s ease-in-out infinite;
}

.animate-particle-burst {
  animation: particleBurst 1s ease-out forwards;
}

.animate-energy-wave {
  animation: energyWave 1.5s ease-out forwards;
}

.animate-magic-rings {
  animation: magicRings 2s ease-out forwards;
}

/* 粒子效果样式 */
.particle {
  position: absolute;
  width: 0.25rem;
  height: 0.25rem;
  background-color: rgb(34 211 238);
  border-radius: 50%;
  left: var(--particle-left, 50%);
  top: var(--particle-top, 50%);
  animation: ping var(--particle-duration, 2s) cubic-bezier(0, 0, 0.2, 1) infinite;
  animation-delay: var(--particle-delay, 0s);
}

.progress-bar {
  width: 100%;
  background-color: rgb(34 211 238 / 0.2);
  border-radius: 9999px;
  height: 0.5rem;
}

.progress-fill {
  background: linear-gradient(to right, rgb(34 211 238), rgb(168 85 247));
  height: 0.5rem;
  border-radius: 9999px;
  transition: all 0.15s ease-in-out;
  width: var(--progress-width, 0%);
}

.energy-wave {
  animation-delay: var(--wave-delay, 0s);
}

.magic-ring {
  width: var(--ring-size, 80px);
  height: var(--ring-size, 80px);
  animation-delay: var(--ring-delay, 0s);
}

.particle-burst {
  left: var(--burst-left, 50%);
  top: var(--burst-top, 50%);
  animation-delay: var(--burst-delay, 0s);
}

.preserve-3d {
  transform-style: preserve-3d;
}

.backface-hidden {
  backface-visibility: hidden;
}

/* 自定义尺寸 */
.w-80 {
  width: 20rem; /* 320px */
}

.h-120 {
  height: 30rem; /* 480px */
}

/* 星星和IRYS字符掉落效果 */
.falling-stars {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  z-index: 1;
  pointer-events: none;
}

.falling-star {
  position: absolute;
  color: #00ffff;
  font-size: 1.5rem;
  animation: starFall var(--element-duration, 3s) linear infinite;
  animation-delay: var(--element-delay, 0s);
  left: var(--element-left, 100%);
  top: var(--element-top, -50px);
  opacity: var(--element-opacity, 0.8);
  text-shadow: 0 0 10px currentColor;
}

.falling-irys {
  position: absolute;
  color: #51ffd6;
  font-size: 1rem;
  font-weight: bold;
  font-family: 'Orbitron', monospace;
  animation: irysFall var(--element-duration, 4s) linear infinite;
  animation-delay: var(--element-delay, 0s);
  left: var(--element-left, 100%);
  top: var(--element-top, -50px);
  opacity: var(--element-opacity, 0.6);
  text-shadow: 0 0 8px currentColor;
}

.falling-moon {
  position: absolute;
  font-size: 1.8rem;
  color: #fbbf24;
  animation: moonFall var(--element-duration, 6s) linear infinite;
  animation-delay: var(--element-delay, 0s);
  left: var(--element-left, 100%);
  top: var(--element-top, -50px);
  opacity: var(--element-opacity, 0.7);
  text-shadow: 0 0 12px #fbbf24, 0 0 24px #fbbf24;
  filter: drop-shadow(0 0 8px rgba(251, 191, 36, 0.5));
}

@keyframes starFall {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: var(--star-opacity, 0.8);
  }
  90% {
    opacity: var(--star-opacity, 0.8);
  }
  100% {
    transform: translateX(var(--star-distance, -200px)) translateY(calc(100vh + 100px)) rotate(360deg);
    opacity: 0;
  }
}

@keyframes irysFall {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: var(--irys-opacity, 0.6);
  }
  90% {
    opacity: var(--irys-opacity, 0.6);
  }
  100% {
    transform: translateX(var(--irys-distance, -300px)) translateY(calc(100vh + 100px)) rotate(180deg);
    opacity: 0;
  }
}

@keyframes moonFall {
  0% {
    transform: translateX(0) translateY(0) rotate(0deg) scale(0.8);
    opacity: 0;
  }
  10% {
    opacity: var(--moon-opacity, 0.7);
    transform: translateX(0) translateY(0) rotate(0deg) scale(1);
  }
  50% {
    transform: translateX(calc(var(--element-distance, -400px) * 0.5)) translateY(calc(50vh)) rotate(180deg) scale(1.1);
  }
  90% {
    opacity: var(--moon-opacity, 0.7);
    transform: translateX(calc(var(--element-distance, -400px) * 0.9)) translateY(calc(90vh)) rotate(270deg) scale(0.9);
  }
  100% {
    transform: translateX(var(--element-distance, -400px)) translateY(calc(100vh + 100px)) rotate(360deg) scale(0.7);
    opacity: 0;
  }
}

/* 进度弹窗动画效果 */
@keyframes progressGlow {
  0%, 100% {
    box-shadow: 0 0 20px rgba(6, 182, 212, 0.3), 0 0 40px rgba(6, 182, 212, 0.1);
  }
  50% {
    box-shadow: 0 0 30px rgba(6, 182, 212, 0.5), 0 0 60px rgba(6, 182, 212, 0.2);
  }
}

@keyframes progressPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
}

@keyframes progressBounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes progressRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes progressShimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes progressSparkle {
  0%, 100% {
    opacity: 0;
    transform: scale(0);
  }
  50% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes progressSuccess {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes progressParticle {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
}

@keyframes progressWave {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* 进度弹窗样式类 */
.progress-modal-glow {
  animation: progressGlow 2s ease-in-out infinite;
}

.progress-step-pulse {
  animation: progressPulse 1.5s ease-in-out infinite;
}

.progress-step-bounce {
  animation: progressBounce 1s ease-in-out infinite;
}

.progress-step-rotate {
  animation: progressRotate 2s linear infinite;
}

.progress-bar-shimmer {
  background: linear-gradient(
    90deg,
    #06b6d4 0%,
    #8b5cf6 25%,
    #ec4899 50%,
    #8b5cf6 75%,
    #06b6d4 100%
  );
  background-size: 200% 100%;
  animation: progressShimmer 2s linear infinite;
}

.progress-success-celebration {
  animation: progressSuccess 0.6s ease-out;
}

.progress-particle {
  animation: progressParticle 3s ease-out infinite;
}

.progress-wave {
  animation: progressWave 2s ease-in-out infinite;
}

/* 错误状态动画 */
.progress-error-shake {
  animation: progressErrorShake 0.5s ease-in-out;
}

@keyframes progressErrorShake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}